apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-auth0

spec:
  selector:
    matchLabels:
      name: spring-auth0
  replicas: 1
  template:
    metadata:
      labels:
        name: spring-auth0
    spec:
      containers:
        - name: spring-auth0
          image: auth-service
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8080
              name: auth-service
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://127.0.0.1:5432/stuf_db0"
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy
          command:
            - "/cloud_sql_proxy"
            - "instances=gclouadfunctionstry0:europe-west9:stuf-test0"
            - "-credential_file=/auth/src/main/resources/gclouadfunctionstry0-918d858115d7.json"
      #     volumeMounts:
      #       - name: clousql-instance-credentials
      #         mountPath: secrets/cloudssql
      #         readOnly: true
      # volumes:
      #   - name: cloudsql-instance-credentials
      #     secret:
      #       secretName: cloudsql-instance-credentials

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webappstuf

spec:
  # minReadySeconds: 30
  selector:
    matchLabels:
      app2: web_app_stuf
  replicas: 1
  template:
    metadata:
      labels:
        app2: web_app_stuf
    spec:
      containers:
        - name: webappstuf
          image: web_app_stuf
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-react
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp-react
  template:
    metadata:
      labels:
        app: webapp-react
    spec:
      containers:
        - name: webapp-react
          imagePullPolicy: "IfNotPresent"
          image: web_app_prod6
          ports:
            - containerPort: 80
